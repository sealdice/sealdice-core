import{_ as e,c as r,o as h,a8 as l}from"./chunks/framework.bOCt8wBo.js";const o="/sealdice-core/assets/newbie_terms_windows_terminal_icon.CtB6BvsL.svg",u=JSON.parse('{"title":"名词/术语速查表","description":"","frontmatter":{"lang":"zh-cn","title":"名词/术语速查表"},"headers":[],"relativePath":"archive/archive-terms.md","filePath":"archive/archive-terms.md","lastUpdated":1758531130000}'),t={name:"archive/archive-terms.md"};function i(n,a,d,s,c,p){return h(),r("div",null,[...a[0]||(a[0]=[l('<h1 id="名词-术语速查表" tabindex="-1">名词/术语速查表 <a class="header-anchor" href="#名词-术语速查表" aria-label="Permalink to &quot;名词/术语速查表&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">本节内容</p><p>本节为计算机小白指南中的第四部分。</p><p>本节旨在帮助先前未曾接触过计算机以及服务器，或者对计算机及服务器知之甚少的用户快速查询特定名词/术语的含义。本节不能代替权威解释或各项目的官方文档。</p><p>关于如何正确地提问，请看 <a href="./archive-guide.html#如何正确提问">如何正确提问</a>，关于如何快速学习相关背景知识，请看 <a href="./archive-guide.html#如何高效学习">如何高效学习</a>；关于一些小白常见的问题，请看 <a href="./archive-guide.html#计算机小白常见问题">计算机小白常见问题</a>。</p></div><h2 id="c" tabindex="-1">C <a class="header-anchor" href="#c" aria-label="Permalink to &quot;C&quot;">​</a></h2><h3 id="cq-码" tabindex="-1">CQ 码 <a class="header-anchor" href="#cq-码" aria-label="Permalink to &quot;CQ 码&quot;">​</a></h3><p>CQ 码是酷 Q（CoolQ）时代定义的一套接口语言，方便用户快速编写指定类型 QQ 消息。可以参考 <a href="https://docs.go-cqhttp.org/cqcode" target="_blank" rel="noreferrer">这个页面</a> 进行编写。</p><h2 id="d" tabindex="-1">D <a class="header-anchor" href="#d" aria-label="Permalink to &quot;D&quot;">​</a></h2><h3 id="端口" tabindex="-1">端口 <a class="header-anchor" href="#端口" aria-label="Permalink to &quot;端口&quot;">​</a></h3><p>参见 <a href="#ip-与端口">IP 与端口</a>。</p><h2 id="f" tabindex="-1">F <a class="header-anchor" href="#f" aria-label="Permalink to &quot;F&quot;">​</a></h2><h3 id="服务器" tabindex="-1">服务器 <a class="header-anchor" href="#服务器" aria-label="Permalink to &quot;服务器&quot;">​</a></h3><p>服务器可以简单地理解为持续保持开机的电脑，即持续提供服务的机器。</p><p>我们知道，骰子本质是在电脑上运行的程序，如果希望骰子 24 小时都可以回应我们的指令，那么就需要电脑保持开启的状态。但这样做的不稳定性非常大，如果出现例如家里突然停电了这样的情况，骰子就不能 24 小时随时回复我们的指令了，并且，这样也很费电。而服务器正是这样一种尽可能稳定运行的、不会关机的电脑，他们可能以「云电脑」这样的名字出现，但从本质上来说，这就是服务器。</p><div class="tip custom-block"><p class="custom-block-title">提示：服务器和个人计算机在使用上有明显差异</p><p>相比开机激活之后马上就可以投入使用的个人计算机，服务器从运行系统上就与其稍有不同。这里以 Windows 系统的服务器和个人电脑举例。</p><p>服务器使用的是微软特地为了服务器开发的 Windows Server 系统。顾名思义，这个系统就是专为服务器开发的，在部分设置的选项中也与个人计算机有所不同。</p><p>正因如此，服务器一开始并不容易熟练操作。不过，这篇速查表的目的就是让屏幕前不太明白计算机相关知识的用户可以快速入门。所以，你也不必对这些问题有太大的压力。</p></div><h2 id="g" tabindex="-1">G <a class="header-anchor" href="#g" aria-label="Permalink to &quot;G&quot;">​</a></h2><h3 id="工作目录" tabindex="-1">工作目录 <a class="header-anchor" href="#工作目录" aria-label="Permalink to &quot;工作目录&quot;">​</a></h3><p>工作目录是用户在使用 <a href="#命令行界面">命令行界面</a> 时，当前「处于」的目录。在运行程序时，程序会以工作目录作为索引目录树的起始位置。</p><p>海豹核心要求的、和实际运行时的工作目录即为「包含 <code>sealdice-core(.exe)</code> 文件和 <code>data</code> 目录、通常还包含 <code>lagrange</code> 目录」的目录（文件夹）。</p><p>海豹工作目录内的文件结构可以参考 <a href="./../deploy/about_file.html">海豹的本地文件</a>。</p><h2 id="h" tabindex="-1">H <a class="header-anchor" href="#h" aria-label="Permalink to &quot;H&quot;">​</a></h2><h3 id="headless" tabindex="-1">Headless <a class="header-anchor" href="#headless" aria-label="Permalink to &quot;Headless&quot;">​</a></h3><p>参见 <a href="#无头">无头</a>。</p><h2 id="i" tabindex="-1">I <a class="header-anchor" href="#i" aria-label="Permalink to &quot;I&quot;">​</a></h2><h3 id="ip-与端口" tabindex="-1">IP 与端口 <a class="header-anchor" href="#ip-与端口" aria-label="Permalink to &quot;IP 与端口&quot;">​</a></h3><p>在分离部署 QQ 后端和部署多只海豹时，你都需要正确处理 IP 与端口号。IP 与端口是互联网应用用于定位彼此的方式之一，IP 用于区分网络中的不同设备，而端口用于区分同一设备上的不同应用。打个比方，IP 就像是地址，可以定位到某个特定的房屋，而端口号是这个屋子里住户的编号，可以用于判断该联系这户人中的哪一位。在目前主流使用的 IPv4 标准下，IP 是形如 <code>127.0.0.1</code>、<code>192.168.0.1</code> 的一串数字，端口号则是范围在 0-65535 的一个整数。两者组合时，通常使用 <code>127.0.0.1:3456</code> 的方式描述。</p><p>通常来说，服务端应用程序会「监听」一个端口，而客户端应用程序会试图连接到此端口。例如在分离部署 QQ 后端并采用正向 WS 连接时，QQ 后端会监听你在配置中指定的端口，而海豹会试图连接到这个端口；而海豹的 WebUI 作为服务端默认绑定到 3211 端口，你的浏览器则试图连接到 3211 端口。所以，在配置分离部署的 QQ 后端时，海豹中必须填入与你的 QQ 后端配置相同的端口号。</p><p>不同范围的 IP 地址都有与之相关的规定，而你在配置海豹的过程中最常见的是 <code>127.0.0.1</code> 或 <code>localhost</code>。此地址一般用于指向<strong>本机</strong>，而非互联网上的其他设备。当你的海豹与 QQ 后端位于<strong>同一主机</strong>上，在海豹中需要通过此地址指向 QQ 后端。当你访问 WebUI 的设备与海豹所在的是<strong>同一主机</strong>，你也需要在浏览器地址栏填入此 IP。</p><p>同样的，端口号也不能随意指定。一般情况下，一个端口只能被一个服务端监听使用，这就是为什么当你部署多只海豹时需要切换端口，此时默认的 3211 端口已被第一只海豹占用。而低位端口（小数字）通常有其约定，例如 80 是 HTTP 端口，443 是 HTTPS 端口等。低位端口通常已经被占用，或系统安全策略不允许随意监听此类端口。所以，建议优先选择高位端口（大数字）部署 QQ 后端及海豹。</p><h3 id="issue" tabindex="-1">Issue <a class="header-anchor" href="#issue" aria-label="Permalink to &quot;Issue&quot;">​</a></h3><p>Issue 更常见的含义是偏向负面的「问题」，而在开源项目领域，issue 一词更多地被翻译为中性的「议题」。</p><p>在开源项目网站如 GitHub 的 Issues 标签页下，按默认设置，你可以看到一个开源项目的全部进行中的议题。这些议题主要包括了使用求助、Bug 反馈以及功能请求。在这里的讨论是所有人可见的，因此可以方便开发者与用户高效地共享信息。Issue 也是大部分开源项目正式的反馈渠道。</p><h2 id="j" tabindex="-1">J <a class="header-anchor" href="#j" aria-label="Permalink to &quot;J&quot;">​</a></h2><h3 id="json" tabindex="-1">JSON <a class="header-anchor" href="#json" aria-label="Permalink to &quot;JSON&quot;">​</a></h3><p>JSON 是一种 <a href="#数据序列化语言">数据序列化语言</a>。语法入门可以参考 <a href="./../advanced/edit_deck.html">编写牌堆</a>。</p><h2 id="k" tabindex="-1">K <a class="header-anchor" href="#k" aria-label="Permalink to &quot;K&quot;">​</a></h2><h3 id="控制台" tabindex="-1">控制台 <a class="header-anchor" href="#控制台" aria-label="Permalink to &quot;控制台&quot;">​</a></h3><p>控制台是 <a href="#终端">终端</a> 生成的、用于与 <a href="#shell">Shell</a> 交互的界面。</p><p>你可能还想了解 <a href="#控制台">控制台</a>、<a href="#命令行">命令行</a>、<a href="#shell">Shell</a> 与 <a href="#命令提示符">命令提示符</a>。</p><p>许多时候，终端、控制台、命令行与 Shell 或命令提示符等名词会被混用，因为在实际交互中，他们所指代的东西往往是一体的。</p><h2 id="l" tabindex="-1">L <a class="header-anchor" href="#l" aria-label="Permalink to &quot;L&quot;">​</a></h2><h3 id="lagrange" tabindex="-1">Lagrange <a class="header-anchor" href="#lagrange" aria-label="Permalink to &quot;Lagrange&quot;">​</a></h3><p>Lagrange（拉格兰）是一个 <a href="#ntqq">NTQQ</a> 协议相关的开源项目。其包括目前实现了 <a href="#linux">Linux</a> NTQQ 协议的 Lagrange.Core，和提供 OneBot-V11 API 的 Lagrange.Onebot 两部分。</p><p>Lagrange 可以很方便的在多个平台（Windows、Linux、Mac）部署，海豹核心可以对接其提供的 OneBot-V11 API 来提供 QQ 骰子服务。</p><p>可以参考 <a href="./../deploy/platform-qq.html">连接平台 - QQ</a> 中 <a href="./../deploy/platform-qq.html#Lagrange">有关的部分</a> 和 Lagrange 的官方 <a href="https://github.com/LagrangeDev/Lagrange.Core" target="_blank" rel="noreferrer">GitHub 页面</a>。</p><h3 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h3><p>Linux 是一种基于 UNIX 操作系统设计的开源操作系统。Linux 广泛应用于服务器、嵌入式系统、超级计算机以及大多数互联网基础设施。它也可以用于桌面计算，尽管市场份额相对较小。</p><p>Linux 的主要优点包括稳定性、安全性、低成本（大部分 Linux 发行版都是免费的）和开源性（用户可以查看和修改源代码）。</p><h3 id="liteloader" tabindex="-1">LiteLoader <a class="header-anchor" href="#liteloader" aria-label="Permalink to &quot;LiteLoader&quot;">​</a></h3><p><a href="https://github.com/LiteLoaderQQNT/LiteLoaderQQNT" target="_blank" rel="noreferrer">LiteLoaderQQNT</a>（LiteLoader）是 <a href="#ntqq">NTQQ</a> 的插件加载器，允许通过插件注入 QQ 实现某些特定的功能。</p><p>可以参考 <a href="./../deploy/platform-qq.html">连接平台 - QQ</a> 中 <a href="./../deploy/platform-qq.html#llonebot">有关的部分</a> 和 LiteLoader 的官方 <a href="https://github.com/LiteLoaderQQNT/LiteLoaderQQNT" target="_blank" rel="noreferrer">GitHub 页面</a>。</p><h3 id="log" tabindex="-1">Log <a class="header-anchor" href="#log" aria-label="Permalink to &quot;Log&quot;">​</a></h3><p>参见 <a href="#日志">日志</a>。</p><h2 id="m" tabindex="-1">M <a class="header-anchor" href="#m" aria-label="Permalink to &quot;M&quot;">​</a></h2><h3 id="命令行" tabindex="-1">命令行 <a class="header-anchor" href="#命令行" aria-label="Permalink to &quot;命令行&quot;">​</a></h3><p>命令行是 <a href="#控制台">控制台</a> 中，你实际输入命令的位置。通常，命令行行首会有 <code>$</code>、<code>#</code> 或 <code>&gt;</code> 等符号，它们是 <a href="#shell">Shell</a> 生成的提示符 (Prompt)，用于提示用户 Shell 正在等待用户输入命令。</p><p>你可能还想了解 <a href="#终端">终端</a>、<a href="#控制台">控制台</a>、<a href="#shell">Shell</a> 与 <a href="#命令提示符">命令提示符</a>。</p><p>许多时候，终端、控制台、命令行与 Shell 或命令提示符等名词会被混用，因为在实际交互中，他们所指代的东西往往是一体的。</p><h3 id="命令行界面" tabindex="-1">命令行界面 <a class="header-anchor" href="#命令行界面" aria-label="Permalink to &quot;命令行界面&quot;">​</a></h3><p>命令行界面即基于 <a href="#命令行">命令行</a> 的用户界面。在此界面下，用户通常使用输入指令的方式与操作系统或程序进行交互。</p><h3 id="命令提示符" tabindex="-1">命令提示符 <a class="header-anchor" href="#命令提示符" aria-label="Permalink to &quot;命令提示符&quot;">​</a></h3><p>命令提示符（<code>cmd.exe</code>）是 Windows 平台下，在上个世代常用，在如今（由于 Windows <em>过于完善</em>的<em>兼容性</em>）也经常被使用到的一种 <a href="#shell">Shell</a>。</p><p>命令提示符本身集成了 <a href="#控制台">控制台</a>，但由于其过于古老，具有诸多弊端。例如，当你用鼠标选中控制台内的文本时，正在运行的程序会被暂停。</p><p>因此，强烈建议你使用 <a href="#windows-终端">Windows 终端</a> 打开程序。在较新的 Windows 系统上，命令提示符默认使用 Windows 终端打开。</p><p>你可能还想了解 <a href="#终端">终端</a>、<a href="#控制台">控制台</a>、<a href="#命令行">命令行</a> 与 <a href="#shell">Shell</a>。</p><p>许多时候，终端、控制台、命令行与 Shell 或命令提示符等名词会被混用，因为在实际交互中，他们所指代的东西往往是一体的。</p><h2 id="n" tabindex="-1">N <a class="header-anchor" href="#n" aria-label="Permalink to &quot;N&quot;">​</a></h2><h3 id="napcatqq" tabindex="-1">NapCatQQ <a class="header-anchor" href="#napcatqq" aria-label="Permalink to &quot;NapCatQQ&quot;">​</a></h3><p>NapCatQQ 是基于 PC <a href="#ntqq">NTQQ</a> 本体实现一套 <a href="#无头">无头</a> Bot 框架。</p><p>可以参考 <a href="./../deploy/platform-qq.html">连接平台 - QQ</a> 中 <a href="./../deploy/platform-qq.html#napcatqq">有关的部分</a> 和 NapCatQQ 的官方 <a href="https://github.com/NapNeko/NapCatQQ" target="_blank" rel="noreferrer">GitHub 页面</a>。</p><h3 id="ntqq" tabindex="-1">NTQQ <a class="header-anchor" href="#ntqq" aria-label="Permalink to &quot;NTQQ&quot;">​</a></h3><p>NTQQ/QQNT 是腾讯公司基于 NT 内核，重新设计了用户界面的 QQ 客户端。腾讯官方称之为「QQ 9」。因此，如果发现自己使用的 QQ 不能正确加载 <a href="#liteloader">LiteLoader</a> 等插件，请先检查 QQ 版本号是否大于 9。</p><h2 id="q" tabindex="-1">Q <a class="header-anchor" href="#q" aria-label="Permalink to &quot;Q&quot;">​</a></h2><h3 id="qqnt" tabindex="-1">QQNT <a class="header-anchor" href="#qqnt" aria-label="Permalink to &quot;QQNT&quot;">​</a></h3><p>参见 <a href="#ntqq">NTQQ</a>。</p><h2 id="r" tabindex="-1">R <a class="header-anchor" href="#r" aria-label="Permalink to &quot;R&quot;">​</a></h2><h3 id="日志" tabindex="-1">日志 <a class="header-anchor" href="#日志" aria-label="Permalink to &quot;日志&quot;">​</a></h3><p>在计算机领域中，日志通常指程序在运行时生成的一系列记录。这些记录通常反映了程序的运行状态，同时一般包含时间信息以方便定位对应的事件。在程序运行发生故障或不符合预期的行为时，日志中通常也会有所反映。日志通常分为信息（Info）、注意（Warning）和错误（Error）等不同的等级，而后两者就对应了上述的程序问题。</p><p>海豹的日志通常可以在三个地方找到：</p><ul><li><a href="#webui">WebUI</a> 的「日志」导航栏，也即默认页面下。</li><li>运行着海豹核心的 <a href="#控制台">控制台</a>。</li><li>海豹 <a href="#工作目录">工作目录</a> 下， <code>data/main.log</code> 和 <code>data/default/record.log</code> 文件内。</li></ul><h2 id="s" tabindex="-1">S <a class="header-anchor" href="#s" aria-label="Permalink to &quot;S&quot;">​</a></h2><h3 id="数据序列化语言" tabindex="-1">数据序列化语言 <a class="header-anchor" href="#数据序列化语言" aria-label="Permalink to &quot;数据序列化语言&quot;">​</a></h3><p>程序运行中使用的数据，通常以特定的数据结构存储在内存之中。为了更方便地对数据进行存储、传输与重建，数据序列化语言被发明出来。这类语言通过特定的语法描述了数据之间的关系，并以文本的方式存储或传输。程序可以从这类语言中方便地恢复原有的数据结构。</p><p>常见的数据序列化语言包括 <a href="#json">JSON</a>、<a href="#yaml">YAML</a>、<a href="#toml">TOML</a>等。</p><h3 id="shell" tabindex="-1">Shell <a class="header-anchor" href="#shell" aria-label="Permalink to &quot;Shell&quot;">​</a></h3><p>我们日常使用的程序通常使用图形用户界面（GUI）与我们交互，即基于图形渲染和鼠标点击、拖拽的交互方式。而在编程领域和更古早的时期，<a href="#命令行界面">命令行界面</a>（CLI）则更为常用。在使用 CLI 时，我们第一个打开的程序通常就是 Shell。</p><p>Shell 是一个特殊的命令行界面程序，它给用户提供了通过输入命令与操作系统进行交互的交互方式。它会解析并执行用户输入的命令。</p><p>在类 Unix 系统中存在众多的 Shell，例如 Ubuntu 系统默认使用 Bash 而 macOS 默认使用 Zsh。Windows 系统推荐使用 PowerShell，而 <a href="#命令提示符">命令提示符</a> 也是一种 Shell。</p><p>你可能还想了解 <a href="#终端">终端</a>、<a href="#控制台">控制台</a> 与 <a href="#命令行">命令行</a>。</p><p>许多时候，终端、控制台、命令行、Shell 与命令提示符等名词会被混用，因为在实际交互中，他们所指代的东西往往是一体的。</p><h2 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h2><h3 id="toml" tabindex="-1">TOML <a class="header-anchor" href="#toml" aria-label="Permalink to &quot;TOML&quot;">​</a></h3><p>TOML 是一种 <a href="#数据序列化语言">数据序列化语言</a>。语法入门可以参考 <a href="./../advanced/edit_deck.html">编写牌堆</a>。</p><h2 id="w" tabindex="-1">W <a class="header-anchor" href="#w" aria-label="Permalink to &quot;W&quot;">​</a></h2><h3 id="无头" tabindex="-1">无头 <a class="header-anchor" href="#无头" aria-label="Permalink to &quot;无头&quot;">​</a></h3><p>在计算机领域，无头（headless）通常指通过不生成图形化用户界面方式运行（原本有图形化用户界面的）程序。</p><h3 id="webui" tabindex="-1">WebUI <a class="header-anchor" href="#webui" aria-label="Permalink to &quot;WebUI&quot;">​</a></h3><p>UI 即「用户界面（User Interface）」，通常指用户与程序发生交互的位置。而 WebUI 顾名思义，就是通过网络生成、交互的用户界面。</p><p>在海豹的相关语境下，WebUI 指骰主能通过浏览器访问到的管理后台。海豹默认的 WebUI 监听 <a href="#ip-与端口">端口</a> 为 3211，因此当你通过 3211 端口访问海豹的管理后台时，实质上就是在与海豹的 WebUI 交互。</p><h3 id="windows-terminal" tabindex="-1">Windows Terminal <a class="header-anchor" href="#windows-terminal" aria-label="Permalink to &quot;Windows Terminal&quot;">​</a></h3><p>参见 <a href="#windows-终端">Windows 终端</a>。</p><h3 id="windows-终端" tabindex="-1">Windows 终端 <a class="header-anchor" href="#windows-终端" aria-label="Permalink to &quot;Windows 终端&quot;">​</a></h3><p><img src="'+o+'" alt="Windows Terminal icon"></p><blockquote><p>Windows 终端是一个为命令行用户准备的全新的、现代的、功能丰富的生产力 <a href="#终端">终端</a>。它包含了 Windows 命令行社区经常希望加入的新功能，例如标签页、富文本、全球化、可配置性和主题与风格化等等。</p></blockquote><p>如果你在 Windows「开始菜单」的搜素功能中，输入「终端」后并没有出现如上所示的图标。那么强烈建议你下载并安装 Windows 终端，而不是继续使用 <a href="#命令提示符">命令提示符</a> 集成的 <a href="#控制台">控制台</a>。</p><p>如果你发现你在启动海豹核心、<a href="#lagrange">Lagrange</a> 或 <a href="#napcatqq">NapCatQQ</a> 等程序时，弹出窗口的字体与风格都不属于 Windows 终端，那么强烈建议你在 Windows 终端中手动启动这些程序。</p><h2 id="y" tabindex="-1">Y <a class="header-anchor" href="#y" aria-label="Permalink to &quot;Y&quot;">​</a></h2><h3 id="yaml" tabindex="-1">YAML <a class="header-anchor" href="#yaml" aria-label="Permalink to &quot;YAML&quot;">​</a></h3><p>YAML 是一种 <a href="#数据序列化语言">数据序列化语言</a>。语法入门可以参考 <a href="./../advanced/edit_deck.html">编写牌堆</a>。</p><h2 id="z" tabindex="-1">Z <a class="header-anchor" href="#z" aria-label="Permalink to &quot;Z&quot;">​</a></h2><h3 id="终端" tabindex="-1">终端 <a class="header-anchor" href="#终端" aria-label="Permalink to &quot;终端&quot;">​</a></h3><p>终端（Terminal）是一个特殊的程序，它提供了一种访问 <a href="#shell">Shell</a> 的方式，也可以视为 Shell 的一层包装。现代的终端通常会生成一个窗口——即 <a href="#控制台">控制台</a> 用于交互。</p><p>你可能还想了解 <a href="#命令行">命令行</a>、<a href="#shell">Shell</a> 与 <a href="#命令提示符">命令提示符</a>。</p><p>许多时候，终端、控制台、命令行与 Shell 或命令提示符等名词会被混用，因为在实际交互中，他们所指代的东西往往是一体的。</p>',112)])])}const q=e(t,[["render",i]]);export{u as __pageData,q as default};
