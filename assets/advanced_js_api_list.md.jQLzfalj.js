import{_ as i,c as a,o as n,a8 as t}from"./chunks/framework.bOCt8wBo.js";const g=JSON.parse('{"title":"API 列表","description":"","frontmatter":{"lang":"zh-cn","title":"API 列表"},"headers":[],"relativePath":"advanced/js_api_list.md","filePath":"advanced/js_api_list.md","lastUpdated":1758531130000}'),l={name:"advanced/js_api_list.md"};function h(p,s,k,e,E,r){return n(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="api-列表" tabindex="-1">API 列表 <a class="header-anchor" href="#api-列表" aria-label="Permalink to &quot;API 列表&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">本节内容</p><p>本节为海豹提供的 JS API 列表。目前的内容是从上古文档中直接迁移过来的，难免存在错误和缺失，参考本节时请注意识别。</p><p>更好的方式是参考海豹提供的 <a href="https://raw.githubusercontent.com/sealdice/sealdice-js-ext-template/master/types/seal.d.ts" target="_blank" rel="noreferrer">seal.d.ts</a> 文件。（但同样存在缺失）</p><p>如果你需要最准确的内容，当前只能查阅海豹源码。主要查看 <a href="https://github.com/sealdice/sealdice-core/blob/master/dice/dice_jsvm.go" target="_blank" rel="noreferrer">dice_jsvm.go</a>，还有一些 API 以结构体方法的形式存在。</p></div><blockquote><p>其中 ctx 为信息的 MsgContext，msg 为信息的 Message，一般会在定义指令函数时就声明，如：</p></blockquote><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">solve</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">cmdArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    someFunction;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>下面是 API 的说明（完全了吧………应该？）：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//被注释掉的 API 是可以提供的，但是在源码中被注释。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//seal.setVarInt(ctx, \`$XXX\`, valueToSet)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //\`$XXX\`即 rollvm（初阶豹语）中的变量，其会将$XXX 的值设定为 int 类型的 valueToSet。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//seal.setVarStr(ctx, \`$XXX\`, valueToSet)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //同上，区别是设定的为 str 类型的 valueToSet。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, msg, something) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//向收到指令的群中发送 something。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyPerson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, msg, something) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//顾名思义，类似暗骰，向指令触发者（若为好友）私信 something。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyToSender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, msg, something) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//同上，区别是群内收到就群内发送，私聊收到就私聊发送。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">memberBan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, groupID, userID, dur) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//将指定群的指定用户封禁指定时间 (似乎只实现了 walleq 协议？)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">memberKick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, groupID, userID)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//将指定群的指定用户踢出 (似乎也只实现了 walleq 协议？)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, something) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//将 something 经过一层 rollvm 转译并返回，注意需要配合 replyToSender 才能发送给触发者！</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatTmpl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, something) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//调用自定义文案 something</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCtxProxyFirst</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, cmdArgs)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//获取被 at 的第一个人，等价于 getCtxProxyAtPos(ctx, cmdArgs, 0)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.vars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">intGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`$XXX\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回一个数组，其为 \`[int 类型的触发者的该变量的值，bool]\` 当 strGet 一个 int 或 intGet 一个 str 时 bool 为 false，若一切正常则为 true。（之所以会有这么奇怪的说法是因为 rollvm 的「个人变量」机制）。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.vars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">intSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`$XXX\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, valueToSet) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//\`$XXX\` 即 rollvm（初阶豹语）中的变量，其会将 $XXX 的值设定为 int 类型的 valueToSet。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.vars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`$XXX\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回一个数组，其为 \`[str 类型的触发者的该变量的值，bool]\`（之所以会有这么奇怪的说法是因为 rollvm 的「个人变量」机制），当 strGet 一个 int 或 intGet 一个 str 时 bool 为 false，如果一切正常则为 true。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.vars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`$XXX\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, valueToSet) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//\`$XXX\` 即 rollvm（初阶豹语）中的变量，其会将 $XXX 的值设定为 str 类型的 valueToSet。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//seal.vars.varSet(ctx, \`$XXX\`, valueToSet)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //可能是根据数据类型自动推断 int 或 str？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//seal.vars.varGet(ctx, \`$XXX\`)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //同上</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newCmdItemInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用来定义新的指令；没有参数，个人觉得可以视其为类（class）。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newCmdExecuteResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bool) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于判断指令执行结果，true 为成功，false 为失败。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(extName, extAuthor, Version) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于建立一个名为 extName，作者为 extAuthor，版本为 Version 的扩展。注意，extName，extAuthor 和 Version 均为字符串。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(extName) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于查找名为 extname 的扩展，若存在则返回 true，否则返回 false。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(newExt) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//将扩展 newExt 注册到系统中。注意 newExt 是 seal.ext.new 的返回值，将 register 视为 seal.ext.new() 是错误的。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.coc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newRule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用来创建自定义 coc 规则，github.com/sealdice/javascript/examples 中已有详细例子，不多赘述。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.coc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newRuleCheckResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//同上，不多赘述。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.coc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerRule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rule) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//同上，不多赘述。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.deck.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">draw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, deckname, isShuffle) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//他会返回一个抽取牌堆的结果。这里有些复杂：deckname 为需要抽取的牌堆名，而 isShuffle 则是一个布尔值，它决定是否放回抽取；false 为放回，true 为不放回。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.deck.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//重新加载牌堆。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//下面是 1.2 新增 api</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回一个空白的 Message 对象，结构与收到消息的 msg 相同</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTempCtx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(endpoint, msg) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 制作一个 ctx, 需要 msg.MessageType 和 msg.Sender.UserId</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">applyPlayerGroupCardByTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, tmpl) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设定当前 ctx 玩家的自动名片格式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.gameSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(string) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//从 json 解析新的游戏规则。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.gameSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newTemplateByYaml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(string) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//从 yaml 解析新的游戏规则。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCtxProxyAtPos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, cmdArgs, pos) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//获取第 pos 个被 at 的人，pos 从 0 开始计数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">atob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(base64String) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回被解码的 base64 编码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">btoa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(string) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//将 string 编码为 base64 并返回</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//下面是 1.4.1 新增 api</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newConfigItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于创建一个新的配置项，返回一个 ConfigItem 对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(configItem) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于注册一个配置项，参数为 ConfigItem 对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于获取一个配置项的值，参数为扩展对象和配置项的 key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerStringConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;defaultValue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于注册一个 string 类型的配置项，参数为扩展对象、配置项的 key 和默认值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerIntConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于注册一个 int 类型的配置项，参数为扩展对象、配置项的 key 和默认值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerFloatConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123.456</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于注册一个 float 类型的配置项，参数为扩展对象、配置项的 key 和默认值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerBoolConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于注册一个 bool 类型的配置项，参数为扩展对象、配置项的 key 和默认值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerTemplateConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于注册一个 template 类型的配置项，参数为扩展对象、配置项的 key 和默认值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerOptionConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;6&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;7&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于注册一个 option 类型的配置项，参数为扩展对象、配置项的 key、默认值和可选项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getStringConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于获取一个 string 类型配置项的值，参数为扩展对象和配置项的 key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getIntConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于获取一个 int 类型配置项的值，参数为扩展对象和配置项的 key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getFloatConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于获取一个 float 类型配置项的值，参数为扩展对象和配置项的 key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBoolConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于获取一个 bool 类型配置项的值，参数为扩展对象和配置项的 key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTemplateConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于获取一个 template 类型配置项的值，参数为扩展对象和配置项的 key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ext.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOptionConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ext, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于获取一个 option 类型配置项的值，参数为扩展对象和配置项的 key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//下面是 1.4.4 新增 api</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPlayerGroupCard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, tmpl) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//设置当前 ctx 玩家的名片</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ban.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addBan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, id, place, reason)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ban.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addTrust</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, id, place, reason)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ban.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ban.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.ban.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id)</span></span></code></pre></div><p>以下为部分 API 使用示例。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>声明和注册扩展的代码部分已省略。</p></div><h2 id="replygroup-replyperson-replytosender" tabindex="-1"><code>replyGroup</code> <code>replyPerson</code> <code>replyToSender</code> <a class="header-anchor" href="#replygroup-replyperson-replytosender" aria-label="Permalink to &quot;\`replyGroup\` \`replyPerson\` \`replyToSender\`&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//在私聊触发 replyGroup 不会回复</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, msg, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;something&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//触发者会收到&quot;something&quot;的回复</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyPerson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, msg, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;something&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//触发者会收到&quot;something&quot;的私聊回复</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyToSender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, msg, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;something&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//触发者会收到&quot;something&quot;的回复</span></span></code></pre></div><h2 id="memberban-memberkick" tabindex="-1"><code>memberBan</code> <code>memberKick</code> <a class="header-anchor" href="#memberban-memberkick" aria-label="Permalink to &quot;\`memberBan\` \`memberKick\`&quot;">​</a></h2><blockquote><p>是否保留待议</p></blockquote><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//注意这些似乎只能在 WQ 协议上实现;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">memberBan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, groupID, userID, dur) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//将群为 groupID，userid 为 userID 的人封禁 dur（单位未知）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">memberKick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, groupID, userID) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//将群为 groupID，userid 为 userID 的人踢出那个群</span></span></code></pre></div><h2 id="format-formattmpl" tabindex="-1"><code>format</code> <code>formatTmpl</code> <a class="header-anchor" href="#format-formattmpl" aria-label="Permalink to &quot;\`format\` \`formatTmpl\`&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//注意 format 不会自动 reply，而是 return，所以请套一层 reply</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyToSender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, msg, seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`{$t玩家}的人品为：{$t人品}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//{$t人品} 是一个 rollvm 变量，其值等于 .jrrp 出的数值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//回复：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//群主的人品为：87</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyToSender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, msg, seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatTmpl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, unknown))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//这里等大佬来了再研究</span></span></code></pre></div><h2 id="getctxproxyfirst-getctxproxyatpos" tabindex="-1"><code>getCtxProxyFirst</code> <code>getCtxProxyAtPos</code> <a class="header-anchor" href="#getctxproxyfirst-getctxproxyatpos" aria-label="Permalink to &quot;\`getCtxProxyFirst\` \`getCtxProxyAtPos\`&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">solve</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">cmdArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ctxFirst </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCtxProxyFirst</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, cmdArgs)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyToSender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, msg, ctxFirst.player.name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ext.cmdMap[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cmd</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//输入：.test @A @B</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回：A 的名称。这里其实获取的是 A 玩家的 ctx，具体见 ctx 数据结构。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">solve</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">cmdArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ctx2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCtxProxyAtPos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replyToSender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, msg, ctx3.player.name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ext.cmdMap[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cmd</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//输入：.test @A @B @C</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回：C（第三个被@的人，从 0 开始计算）的名称。这里其实获取的是 C 玩家的 ctx，具体见 ctx 数据结构。</span></span></code></pre></div><h2 id="vars" tabindex="-1"><code>vars</code> <a class="header-anchor" href="#vars" aria-label="Permalink to &quot;\`vars\`&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 要看懂这里你可能需要学习一下初阶豹语</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.vars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">intSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`$m今日打卡次数\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//将触发者的该个人变量设置为 8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.vars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">intGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`$m今日打卡次数\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回 [8,true]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.vars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`$g群友经典语录\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`我要 Git Blame 一下看看是谁写的\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//将群内的该群组变量设置为“我要 Git Blame 一下看看是谁写的”</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.vars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strGet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`$g群友经典语录\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回 [&quot;我要 Git Blame 一下看看是谁写的&quot;,true]</span></span></code></pre></div><h2 id="ext" tabindex="-1"><code>ext</code> <a class="header-anchor" href="#ext" aria-label="Permalink to &quot;\`ext\`&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于注册扩展和定义指令的 api，已有详细示例，不多赘述</span></span></code></pre></div><h2 id="coc" tabindex="-1"><code>coc</code> <a class="header-anchor" href="#coc" aria-label="Permalink to &quot;\`coc\`&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用于创建 coc 村规的 api，已有详细示例，不多赘述</span></span></code></pre></div><h2 id="deck" tabindex="-1"><code>deck</code> <a class="header-anchor" href="#deck" aria-label="Permalink to &quot;\`deck\`&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.deck.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">draw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`煤气灯\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回 放回抽取牌堆“煤气灯”的结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.deck.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">draw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`煤气灯\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回 不放回抽取牌堆“煤气灯”的结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.deck.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//重新加载牌堆</span></span></code></pre></div><h2 id="自定义-trpg-规则相关" tabindex="-1">自定义 TRPG 规则相关 <a class="header-anchor" href="#自定义-trpg-规则相关" aria-label="Permalink to &quot;自定义 TRPG 规则相关&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//这里实在不知道如何举例了</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.gameSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(string) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//从 json 解析新的游戏规则。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.gameSystem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newTemplateByYaml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(string) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//从 yaml 解析新的游戏规则。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">applyPlayerGroupCardByTemplate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, tmpl) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设定当前 ctx 玩家的自动名片格式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPlayerGroupCard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, tmpl) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 立刻设定当前 ctx 玩家的名片格式</span></span></code></pre></div><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回一个空白的 Message 对象，结构与收到消息的 msg 相同</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTempCtx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(endpoint, msg) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 制作一个 ctx, 需要 msg.MessageType 和 msg.Sender.UserId</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEndPoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回骰子（应该？）的 EndPoints</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">seal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回一个 map，键值为 version 和 versionCode</span></span></code></pre></div><h2 id="ctx-的内容" tabindex="-1"><code>ctx</code> 的内容 <a class="header-anchor" href="#ctx-的内容" aria-label="Permalink to &quot;\`ctx\` 的内容&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//在 github.com/sealdice/javascript/examples_ts/seal.d.ts 中有完整内容</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 成员</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.group </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当前群信息 (对象)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.player </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当前玩家数据 (对象)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.endPoint </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 接入点数据 (对象)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 以上三个对象内容暂略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.isCurGroupBotOn </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bool</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.isPrivate </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bool 是否私聊</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.privilegeLevel </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// int 权限等级：40 邀请者、50 管理、60 群主、70 信任、100 master</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ctx.delegateText </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// string 代骰附加文本</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 方法 (太长，懒.)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chBindCur</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chBindCurGet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chBindGet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chBindGetList</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chExists</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chGet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chLoad</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chNew</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chUnbind</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chUnbindCur</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chVarsClear</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chVarsGet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chVarsNumGet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chVarsUpdateTime</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">loadGroupVars</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">loadPlayerGlobalVars</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">loadPlayerGroupVars,notice</span></span></code></pre></div><h2 id="ctx-group-的内容" tabindex="-1"><code>ctx.group</code> 的内容 <a class="header-anchor" href="#ctx-group-的内容" aria-label="Permalink to &quot;\`ctx.group\` 的内容&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 成员</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">active</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">groupId</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">guildId</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">groupName</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cocRuleIndex</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logCurName</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logOn</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">recentDiceSendTime</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">showGroupWelcome</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">groupWelcomeMessage</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">enteredTime</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">inviteUserId</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">extActive</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">extClear</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">extGetActive</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">extInactive</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">extInactiveByName</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getCharTemplate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">isActive</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">playerGet</span></span></code></pre></div><h2 id="ctx-player-的内容" tabindex="-1"><code>ctx.player</code> 的内容 <a class="header-anchor" href="#ctx-player-的内容" aria-label="Permalink to &quot;\`ctx.player\` 的内容&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 成员</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">userId</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lastCommandTime</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">autoSetNameTemplate</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getValueNameByAlias</span></span></code></pre></div><h2 id="ctx-endpoint-的内容" tabindex="-1"><code>ctx.endPoint</code> 的内容 <a class="header-anchor" href="#ctx-endpoint-的内容" aria-label="Permalink to &quot;\`ctx.endPoint\` 的内容&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 成员</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">baseInfo</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nickname</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">state</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">userId</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">groupNum</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmdExecutedNum</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmdExecutedLastTime</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">onlineTotalTime</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">platform</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">enable</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">adapterSetup</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">refreshGroupNum</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setEnable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">unmarshalYAML</span></span></code></pre></div><h2 id="msg-的内容" tabindex="-1"><code>msg</code> 的内容 <a class="header-anchor" href="#msg-的内容" aria-label="Permalink to &quot;\`msg\` 的内容&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 成员</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg.time </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// int64 发送时间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg.messageType </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// string group 群聊 private 私聊</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg.groupId </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// string 如果是群聊，群号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg.guildId </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// string 服务器群组号，会在 discord,kook,dodo 等平台见到</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg.sender </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 发送者信息 (对象)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sender.nickname</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sender.userId</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg.message</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg.rawId </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 原始信息 ID, 用于撤回等</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msg.platform </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 平台</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (似乎目前没有？)</span></span></code></pre></div><h2 id="cmdargs-的内容" tabindex="-1"><code>cmdArgs</code> 的内容 <a class="header-anchor" href="#cmdargs-的内容" aria-label="Permalink to &quot;\`cmdArgs\` 的内容&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 成员</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.command </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.args </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// []string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.kwargs </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// []Kwarg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.at </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// []AtInfo</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.rawArgs </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.amIBeMentioned </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bool (为何要加一个 Be?)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.cleanArgs </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// string 一种格式化后的参数，也就是中间所有分隔符都用一个空格替代</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.specialExecuteTimes </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 特殊的执行次数，对应 3# 这种</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isArgEqual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n, ss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回 bool, 检查第 n 个参数是否在 ss 中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eatPrefixWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 似乎是从 cleanArgs 中去除 ss 中第一个匹配的前缀</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chopPrefixToArgsWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不懂</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getArgN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// -&gt; string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getKwarg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(str) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// -&gt; Kwarg 如果有名为 str 的 flag，返回对象，否则返回 null/undefined(不确定)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRestArgsFrom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// -&gt; string 获取从第 n 个参数之后的所有参数，用空格拼接成一个字符串</span></span></code></pre></div>`,41)])])}const y=i(l,[["render",h]]);export{g as __pageData,y as default};
