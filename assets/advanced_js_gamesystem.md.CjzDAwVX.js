import{_ as e,c as t,o as s,a8 as l}from"./chunks/framework.bOCt8wBo.js";const m=JSON.parse('{"title":"编写新的 TRPG 规则","description":"","frontmatter":{"lang":"zh-cn","title":"编写新的 TRPG 规则"},"headers":[],"relativePath":"advanced/js_gamesystem.md","filePath":"advanced/js_gamesystem.md","lastUpdated":1758531130000}'),i={name:"advanced/js_gamesystem.md"};function p(r,a,o,c,h,d){return s(),t("div",null,[...a[0]||(a[0]=[l('<h1 id="编写新的-trpg-规则" tabindex="-1">编写新的 TRPG 规则 <a class="header-anchor" href="#编写新的-trpg-规则" aria-label="Permalink to &quot;编写新的 TRPG 规则&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">本节内容</p><p>本节将介绍如何为你的海豹核心编写和添加一个新的 TRPG 规则。包括编写规则模板和编写指令。</p><p>本文中将涉及使用 JavaScript 与 TypeScript 编写插件的内容。如果你尚未阅读 <a href="./js_example.html">常见用法示例</a>，请先阅读它。</p></div><p>在本节中，假设我们创建了一个叫做《摸鱼大赛》的 TRPG 规则，简称为 fish 规则。</p><details class="details custom-block"><summary>补充：规则详细内容</summary><h4 id="角色属性" tabindex="-1">角色属性 <a class="header-anchor" href="#角色属性" aria-label="Permalink to &quot;角色属性&quot;">​</a></h4><p>每个角色有 2 个关键属性，即<strong>脸皮厚度</strong>和<strong>摸鱼技能等级</strong>。取值分别为 1 - 3，通过投掷 D3 来生成。</p><p>此外有生命值，生命值上限 = 脸皮厚度 * 2。</p><h4 id="游戏规则" tabindex="-1">游戏规则 <a class="header-anchor" href="#游戏规则" aria-label="Permalink to &quot;游戏规则&quot;">​</a></h4><p>简单说：这是一个类 21 点游戏。</p><p>玩家的目标是尽可能使得自己的积分接近 21，但不能大于等于 22（因为摸到 22 就不存在了！）。</p><p>开始游戏时，每个玩家创建一个角色，可以互换交换一次属性点位置。</p><p>每一轮游戏中，每个玩家都要决定“摸鱼”和“不摸鱼”。如果选择摸鱼，获得 d6 + d(摸鱼等级) 的积分；如果选择不摸鱼，则跳过本回合。</p><p>如果选择摸鱼后累计积分超过 22，玩家自动消耗 1 点生命值、随机弃牌 1 张。如果累计积分仍大于 22，那么重复以上过程直到积分小于 22 或生命值归零。</p><p>如果生命值归零，此玩家就无法再摸鱼了。</p><p>当连续两轮所有玩家都选择不摸鱼时，游戏结束。积分最大的人取胜，如果积分相同，生命值更大的人取胜。</p></details><h2 id="规则模板是什么-有什么功能" tabindex="-1">规则模板是什么？有什么功能？ <a class="header-anchor" href="#规则模板是什么-有什么功能" aria-label="Permalink to &quot;规则模板是什么？有什么功能？&quot;">​</a></h2><p>规则模板是海豹核心中几种功能的整合发展，包括角色卡、属性同义词、自动修改群名片等。</p><p>具体地说，规则模板能为 fish 规则提供以下功能：</p><ol><li><p>在 <a href="./../use/core.html#set-设定默认骰子面数--设定游戏系统"><code>set</code> 指令</a> 中注册这个游戏系统，可以直接使用 <code>set fish</code> 打开扩展并设定默认骰子为 D6；</p></li><li><p>在 <code>st</code> 指令中添加 fish 规则的角色卡，这包括：（对于以下内容，可以参考海豹核心内置的 <a href="./../use/coc7.html#st-操作人物卡">CoC 7th</a> 系统与 <a href="./../use/dnd5e.html#st-操作角色卡">D&amp;D 5e</a> 系统角色卡的功能）</p><ol><li>fish 规则自己的技能默认值</li><li>fish 规则的二级属性计算公式</li><li>fish 规则的属性同义词</li><li>fish 规则的角色卡属性展示顺序</li></ol></li><li><p>在 <a href="./../use/log.html#sn-自动群名片"><code>sn</code> 指令</a> 中添加 fish 规则的自动群名片格式，可以使用 <code>sn fish</code> 来开启。</p></li></ol><h2 id="那么-要怎么做" tabindex="-1">那么，要怎么做？ <a class="header-anchor" href="#那么-要怎么做" aria-label="Permalink to &quot;那么，要怎么做？&quot;">​</a></h2><p>你需要根据规则编写规则模板，并把规则中的动作编写成指令。</p><p>对于 fish 规则来说，指令应该实现以下动作：</p><ol><li>制卡：投掷 2 个 D3，生成角色的属性点；</li><li>摸鱼：投掷 D6 + D(摸鱼等级)，计算总积分，按规则扣除生命值；</li><li>不摸鱼：跳过此轮；</li></ol><p>另外，对于一个合适的指令，它也应提供帮助文本。</p><p>以上的规则模板和指令都可以在同一个 TypeScript 或 JavaScript 插件文件中完成。我们已经写了一个比较完善且有详细注释的示例，以供参考：</p><p><a href="https://github.com/sealdice/javascript/blob/main/examples_ts/013.%E8%87%AA%E5%AE%9A%E4%B9%89TRPG%E6%B8%B8%E6%88%8F%E8%A7%84%E5%88%99.ts" target="_blank" rel="noreferrer">摸鱼大赛 TRPG 规则.ts</a></p><p>如果你希望直接尝试以上插件的效果，可以从以下链接获取经过编译的 JavaScript 文件：</p><p><a href="https://github.com/sealdice/javascript/blob/main/examples/013.%E8%87%AA%E5%AE%9A%E4%B9%89TRPG%E6%B8%B8%E6%88%8F%E8%A7%84%E5%88%99.js" target="_blank" rel="noreferrer">摸鱼大赛 TRPG 规则.js</a></p>',17)])])}const f=e(i,[["render",p]]);export{m as __pageData,f as default};
